-- This is the MM1 file that produces proofs to be verified against the
-- declarations in the MM0 file 02-mm0-intro.mm0.

-- Declare delimiters that don't require whitespace
delimiter $ ( ~ $  $ ) $;

-- Declare wff as the sort of provable well-formed formulas
provable sort wff;

--| implication
term imp: wff > wff > wff;
-- infix syntax, right-associative
infixr imp: $->$ prec 25;

--| negation
term not: wff > wff;
-- prefix syntax
prefix not: $~$ prec 100;

-- Lukasiewicz axiom system for propositional calculus

axiom ax_1 (a b: wff): $ a -> b -> a $;

axiom ax_2 (a b c: wff): $ (a -> b -> c) -> (a -> b) -> (a -> c) $;

axiom ax_3 (a b: wff): $ (~a -> ~b) -> (b -> a) $;

axiom ax_mp (a b: wff): $ a -> b $ > $ a $ > $ b $;

-- Theorems are local by default in MM1. `pub` tells the verifier to expect
-- to see the theorem in the MM0 file. The `!` in front of `ax_1` allows
-- values to be explicitly passed for variables (which are normally inferred).
-- Passing `_` as a variable value means to infer it again.
pub theorem id (a: wff): $ a -> a $ = '(ax_mp (ax_mp ax_2 ax_1) (! ax_1 _ $~a$));

-- Definitions are public by default, but can be declared `local`.
local def and (a b) = $ ~(a -> ~b) $;
infixl and: $/\$ prec 35;

local def or (a b) = $ ~a -> b $;
infixl or: $\/$ prec 30;

theorem or_right: $ b -> a \/ b $ = '{ax_1 : $ _ -> _ -> _ $};

-- useful theorems

theorem a1i (h: $ b $): $ a -> b $ = '(ax_mp ax_1 h);
theorem a2i (h: $ a -> b -> c $): $ (a -> b) -> (a -> c) $ = '(ax_mp ax_2 h);
theorem mpd (h1: $ a -> b $) (h2: $ a -> b -> c $): $ a -> c $ = '(ax_mp (ax_mp ax_2 h2) h1);
theorem syl (h1: $ b -> c $) (h2: $ a -> b $): $ a -> c $ = '(mpd h2 (a1i h1));
theorem a3d (h: $ a -> ~b -> ~c $): $ a -> c -> b $ = '(syl ax_3 h);
theorem absurd: $ ~a -> a -> b $ = '(a3d ax_1);
theorem com12 (h: $ a -> b -> c $): $ b -> a -> c $ = '(syl (a2i h) ax_1);
theorem absurdr: $ a -> ~a -> b $ = '(com12 absurd);

theorem or_left: $ a -> a \/ b $ = 'absurdr;

-- To compile the file to make a proof:
-- * from examples/tutorial/
--   run: mm0-rs compile 03-mm1-intro.mm1 03-mm1-intro.mmb
-- * from mm0-c/
--   run: gcc main.c -o mm0-c
-- * go back to examples/tutorial/
--   run: ../../mm0-c/mm0-c 03-mm1-intro.mmb < 02-mm0-intro.mm0
--   This runs the verifier on the binary proof script `03-mm1-intro.mmb`
--   and tells it that the declarations are in `02-mm0-intro.mm0`.
