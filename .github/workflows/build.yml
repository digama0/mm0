name: CI

on:
  push:
    branches: '*'
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build-mm0-rs:
    name: mm0-rs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache mm0-rs
      id: cache-mm0-rs
      uses: actions/cache@v2
      with:
        path: mm0-rs/target/release/mm0-rs
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('mm0-rs/**') }}
    - name: Cache build mm0-rs
      id: cache-build-mm0-rs
      if: ${{ !steps.cache-mm0-rs.outputs.cache-hit }}
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          mm0-rs/target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('mm0-rs/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-release-
    - name: Build mm0-rs
      if: ${{ !steps.cache-mm0-rs.outputs.cache-hit }}
      working-directory: mm0-rs
      run: cargo build --verbose --release
    - name: Run tests
      if: ${{ !steps.cache-mm0-rs.outputs.cache-hit }}
      working-directory: mm0-rs
      run: cargo test --verbose --release
    - uses: actions/upload-artifact@v2
      if: ${{ !steps.cache-mm0-rs.outputs.cache-hit }}
      with:
        name: mm0-rs
        path: mm0-rs/target/release/mm0-rs

  # clippy-mm0-rs:
  #   name: Clippy mm0-rs
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install nightly rust
  #     uses: actions-rs/toolchain@v1
  #     with:
  #       toolchain: nightly
  #       profile: minimal
  #       components: clippy
  #       default: true
  #   - name: Cache clippy
  #     id: cache-nightly-mm0-rs
  #     uses: actions/cache@v2
  #     with:
  #       path: |
  #         ~/.cargo/registry
  #         ~/.cargo/git
  #         mm0-rs/target
  #       key: ${{ runner.os }}-cargo-nightly-${{ hashFiles('mm0-rs/Cargo.lock') }}
  #   - name: Clippy
  #     working-directory: ./mm0-rs
  #     run: cargo clippy --all-features -- -D warnings

  # peano:
  #   name: Peano MM1 files
  #   runs-on: ubuntu-latest
  #   needs: build-mm0-rs
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: mm0-rs
  #       path: .
  #   - working-directory: examples
  #     run: |
  #       echo $PATH
